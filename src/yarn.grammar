@top Script { statement+ }

statement {
    Node |
    NodeInfo |
    Comment
}

nodeContent {
    Name |
    Variable |
    Letter |
    Option |
    Function |
    Comment |
    Statement |
    Markup |
    Tag
}

Node {
    NodeStart nodeContent* NodeEnd
}

NodeInfo {
    NodeHeader (JoinedCharacter | Tag+) LineEnd
}

Name {
    Letter ":"
}

Variable {
    "$" JoinedCharacter
}

Function {
    Letter FunctionArgs
}

Statement {
    BeginStatement Keyword (Number | Letter | (Variable | Number | Function | String) Operator (Variable | Number | String))?  EndStatement
}

SelectSetup {
    JoinedCharacter "=" (Brace Variable Brace | String)
}

Markup {
    Bracket (JoinedCharacter | SelectSetup)* Bracket
}


@skip {Comment} {
    Space {
      " "+
    }
}

@tokens {
    space { @whitespace+ }
    Number { @digit+ }
    LineEnd { $[\n] }
    Letter { @asciiLetter+ }
    FunctionArgs { "(" ![)]* ")" }
    String { $["] !["\n]+ $["]}
    Boolean { "true" | "false" }
    JoinedCharacter { ($[a-z] | "_" | $[A-Z] | $[0-9])+ }
    Option { "->" }
    BeginStatement { "<<" }
    EndStatement { ">>" }
    Keyword { "if" | "set" | "else" | "endif" | "elseif" | "wait" | "jump"}
    Operator { 
        "is" | "to" | "not" | "ne" | "eq" | "le" | "ge" | "gt" | "lt "| "and" | "or" |
        "+" | "-" | "*/" | "!" | "<" | ">" | "=" | "==" | "<=" | ">="
    }
    Tag { "#" ![\n#]* }
    Brace { "{" | "}" }
    Bracket { "]" | "["}
    Comment { "//" ![\n]* }
    HeaderTag { ("#" (":" | JoinedCharacter | " ")* ) }
    NodeStart { "---" }
    NodeEnd { "===" }
    NodeHeader { JoinedCharacter + ":"}
    @precedence{ Comment Tag Operator Keyword String }
}